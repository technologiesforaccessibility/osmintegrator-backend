version: '3.1'

services:
    app:
        build: .
        restart: always
        environment:
            - USER_SECRETS_ID=8c183771-ef09-43ea-8e59-8d9f5ec2235b
        depends_on:
            - db
        env_file:
            - .env.production # that does not exist in the repo, need to be adjusted for tahrget server
        volumes:
            - $APPDATA/Microsoft/UserSecrets/$USER_SECRETS_ID:/root/.microsoft/usersecrets/$USER_SECRETS_ID
            - $HOME/.microsoft/usersecrets/$USER_SECRETS_ID:/root/.microsoft/usersecrets/$USER_SECRETS_ID

    nginx:
        image: nginx
        restart: always
        # this is due to certbot renewal. we have to gracefull reload after certs are obtained again
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
        volumes:
            - ./osmintegrator.conf:/etc/nginx/conf.d/osmintegrator.conf
            - ./nginx.conf:/etc/nginx/nginx.conf
            - ./proxy.conf:/etc/nginx/proxy.conf
            - ./build/:/usr/share/nginx/html      # that does not exist in the repo, need to be copied from frontend build

            # volumes common with certbot
            - ./certbot/conf:/etc/letsencrypt
            - ./certbot/www:/var/www/certbot
        ports:
            - 443:443
            - 80:8080
        depends_on:
            - app

    certbot:
        image: certbot/certbot
        restart: always
        # the entrpoint wont allow container to die, every 12h it will try to reneval (this is common practice, cert will be renewed only if required)
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
        volumes:
            - ./certbot/conf:/etc/letsencrypt
            - ./certbot/www:/var/www/certbot

    db:
        image: postgres
        restart: always
        ports:
            - 5433:5432
        env_file:
            - .env.production # that does not exist in the repo, need to be adjusted for target server
        volumes:
            - pgdata:/var/lib/postgresql/data

volumes:
    pgdata:
